/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-12-03 21:50:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class EditEmployee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

  String username = "";
  if (session.getAttribute("login") != null) {
    username = session.getAttribute("login").toString();
  }
  else {
    out.println("Invalid session! You must log back into the system.");
    return;
  }
  final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
  final String DB_URL = "jdbc:mysql://localhost:3306/SilkRoad 5.0";
  final String USER = "root";
  final String PASS = "root";

  ResultSet employeeListRes = null;

  // Code starts here
	String sql = null;
	Connection conn = null;
	CallableStatement cs = null;
	Statement	stmt = null;


  try	{
  	//Register JDBC driver
  	Class.forName(JDBC_DRIVER).newInstance();

  	// Open a connection
  	conn = java.sql.DriverManager.getConnection(DB_URL, USER, PASS);



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("    <title>Silk Road 5.0</title>\r\n");
      out.write("    <!-- Bootstrap -->\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <link href=\"css/responsive.bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.5/css/bootstrap-dialog.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <!-- Our own custom css -->\r\n");
      out.write("    <link href=\"css/stylesheet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("    <!--[if lt IE 9]>\r\n");
      out.write("    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\r\n");
      out.write("    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("    <script src=\"js/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.validate.js\"></script>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <!-- Include all compiled plugins (below), or include individual files as needed -->\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.5/js/bootstrap-dialog.min.js\"></script>\r\n");
      out.write("    <script src=\"js/pattern.js\"></script>\r\n");
      out.write("    <script src=\"js/script.js\"></script>\r\n");
      out.write("    <script src=\"js/editEmployee.js\"></script>\r\n");
      out.write("  </head>\r\n");
      out.write("  <nav class=\"navbar\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("      <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("      <div class=\"navbar-header\">\r\n");
      out.write("        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n");
      out.write("        <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- navbar-header -->\r\n");
      out.write("      <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("      <div class=\"myNavbar\">\r\n");
      out.write("        <ul class=\"nav\">\r\n");
      out.write("          <li class=\"floatLeft\"><a href=\"ManagerInformation.jsp\">Home</a></li>\r\n");
      out.write("          <li class=\"dropdown navbar-right\" style=\"padding-left:125px;\">\r\n");
      out.write("            <a data-target=\"#collapseHelp\" data-toggle=\"collapse\">Help<span class=\"caret\"></span></a>\r\n");
      out.write("            <ul>\r\n");
      out.write("              <div id=\"collapseHelp\" class=\"dropdown-menu\">\r\n");
      out.write("                <li><a href=\"javascript:showScreenHelp('employee')\">Screens</a></li>\r\n");
      out.write("                <br>\r\n");
      out.write("                <li><a href=\"javascript:showAuctionHelp()\">Auctions</a></li>\r\n");
      out.write("                <br>\r\n");
      out.write("              </div>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"dropdown navbar-right\" style=\"padding-left:200px;\">\r\n");
      out.write("            <a data-target=\"#collapseMenu\" data-toggle=\"collapse\" >Menu<span class=\"caret\"></span></a>\r\n");
      out.write("            <ul>\r\n");
      out.write("              <div id=\"collapseMenu\" class=\"dropdown-menu\">\r\n");
      out.write("                <li><a href=\"javascript:showBestSellers()\">Best Sellers</a></li>\r\n");
      out.write("                <br>\r\n");
      out.write("                <li><a href=\"javascript:showItemSuggestions()\">Item Suggestions</a></li>\r\n");
      out.write("                <br>\r\n");
      out.write("              </div>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <!-- .nav -->\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- .myNavbar -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- .container-fluid -->\r\n");
      out.write("  </nav>\r\n");
      out.write("  <div id=\"editEmployeeModal\" class=\"modal fade\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header myModal auctionTableHeader\">Edit Employee</div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <input type=\"hidden\" id=\"employeeID\">\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Lastname</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"lastname\" id=\"lastname\" >\r\n");
      out.write("                </div>\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Firstname</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"firstname\" id=\"firstname\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Address</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"address\" id=\"address\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Zipcode</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"zipcode\" id=\"zipcode\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Telephone</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"telephone\" id=\"telephone\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Email</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"email\" id=\"email\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Password</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"password\" id=\"password\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <label class = \"control-label\" for=\"Txt\">Hourly Rate</label>\r\n");
      out.write("                <div class = \"controls regControl input-symbol-dollar\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" name=\"hourlyRate\" id=\"hourlyRate\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button id=\"placeBidBtn\" class=\"btn btn-primary\" data-dismiss=\"modal\" onclick=\"editEmployeeData(employeeID, lastname.value,\r\n");
      out.write("                 firstname.value, address.value, zipcode.value, telephone.value, email.value, password.value, hourlyRate.value)\" aria-hidden=\"true\">Update</button>\r\n");
      out.write("            </div>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div> <!-- bidModal -->\r\n");
      out.write("<div id=\"deleteEmployeeModal\" class=\"modal fade\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("          <div class=\"modal-header myModal auctionTableHeader\">Delete Employee</div>\r\n");
      out.write("          <div class=\"modal-body\">\r\n");
      out.write("              <input type=\"hidden\" id=\"employeeID\">\r\n");
      out.write("              <label class = \"control-label\" for=\"Txt\">Are you sure you want to delete </label>\r\n");
      out.write("              <label id=\"toBeDeleted\"></label>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"modal-footer\">\r\n");
      out.write("              <button id=\"placeBidBtn\" class=\"btn btn-warning btn-block\" data-dismiss=\"modal\" onclick=\"deleteEmployee(employeeID)\" aria-hidden=\"true\">Update</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div> <!-- bidModal -->\r\n");
      out.write("<body class=\"auctionHouseBody\">\r\n");
      out.write("  <h4 class=\"auctionTableHeader\">All Employees</h4>\r\n");
      out.write("  ");
 cs = conn.prepareCall("call GetAllEmployeeData()");
    cs.execute();
    // TODO. Error handling
    cs.getMoreResults();
    employeeListRes = cs.getResultSet();
  
      out.write("\r\n");
      out.write("  <div class=\"container\" id=\"employeeTable\">\r\n");
      out.write("    <table id =\"bestSellersTable\" class=\"table table-striped table-bordered dt-responsive nowrap auctionHouseTable\">\r\n");
      out.write("      <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <th>Lastname</th>\r\n");
      out.write("          <th>Firstname</th>\r\n");
      out.write("          <th>Address</th>\r\n");
      out.write("          <th>Zip code</th>\r\n");
      out.write("          <th>Telephone</th>\r\n");
      out.write("          <th>Email</th>\r\n");
      out.write("          <th>Username</th>\r\n");
      out.write("          <th>Password</th>\r\n");
      out.write("          <th>Hourly Rate</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </thead>\r\n");
      out.write("      <tbody>\r\n");
      out.write("        ");
 while(employeeListRes.next()) { 
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(1));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(2));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(3));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(4));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(5));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(6));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(7));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(8));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td>\r\n");
      out.write("            ");
      out.print( employeeListRes.getString(9));
      out.write("\r\n");
      out.write("          </td>\r\n");
      out.write("          <td width = \"1%\">\r\n");
      out.write("             <select onchange=\"employeeDataAction(this,'");
      out.print(employeeListRes.getString("Lastname"));
      out.write("', '");
      out.print(employeeListRes.getString("Firstname"));
      out.write("',\r\n");
      out.write("             '");
      out.print(employeeListRes.getString("Address"));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(employeeListRes.getString("ZipCode"));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(employeeListRes.getString("Telephone"));
      out.write("',\r\n");
      out.write("             '");
      out.print(employeeListRes.getString("Email"));
      out.write("', '");
      out.print(employeeListRes.getString("Password"));
      out.write("', '");
      out.print(employeeListRes.getString("HourlyRate"));
      out.write("')\">\r\n");
      out.write("                <option value=\"\"></option>\r\n");
      out.write("                <option value='");
      out.print(employeeListRes.getInt("EmployeeID"));
      out.write("'>\r\n");
      out.write("                Edit</option>\r\n");
      out.write("             </select>\r\n");
      out.write("          </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("      </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("  </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");

} catch(Exception e) {
  e.printStackTrace();
  out.print(e.toString());
}
finally{
  try {
    if (cs != null) {
      cs.close();
    }
    if (conn != null) {
      conn.close();
    }
  } catch (Exception e) {};
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
