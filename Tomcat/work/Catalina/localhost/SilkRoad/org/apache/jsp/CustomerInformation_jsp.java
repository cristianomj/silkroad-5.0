/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-11-19 03:44:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class CustomerInformation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
	final String DB_URL = "jdbc:mysql://localhost:3306/SilkRoad 5.0";
	final String USER = "root";
	final String PASS = "root";

	// Code starts here
	String sql = null;
	Connection conn = null;
	CallableStatement cs = null;
	Statement	stmt = null;

	// Will hold all of the auctions
  ResultSet allAuctionsRes = null;

	// Will hold all of the item types
	ResultSet itemTypeRes = null;
	try	{
			//Register JDBC driver
			Class.forName(JDBC_DRIVER).newInstance();

			// Open a connection
		  conn = java.sql.DriverManager.getConnection(DB_URL, USER, PASS);

			// TODO. Return only not expired auctions, right?
			cs = conn.prepareCall("call GetAuctions()");
			cs.execute();

			// Extract the status and the return msg
			allAuctionsRes = cs.getResultSet();
	} catch(Exception e) {
		e.printStackTrace();
	}
	finally { // TODO. Implement me?
		try {
		} catch(Exception ee) {};
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\t<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("    <title>Silk Road 5.0</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap -->\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <link href=\"css/responsive.bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Our own custom css -->\r\n");
      out.write("    <link href=\"css/stylesheet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("    <!--[if lt IE 9]>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\r\n");
      out.write("      <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("\t\t<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("    <script src=\"js/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.validate.js\"></script>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- Include all compiled plugins (below), or include individual files as needed -->\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"js/pattern.js\"></script>\r\n");
      out.write("    <script src=\"js/script.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\tvar xhttp;\r\n");
      out.write("\t\tfunction searchByName() {\r\n");
      out.write("\t\t\tvar url = \"getItems.jsp\";\r\n");
      out.write("\t\t\tvar name1 = document.getElementById(\"itemName1\").value;\r\n");
      out.write("\t\t\tvar name2 = document.getElementById(\"itemName2\").value;\r\n");
      out.write("\t\t\tvar name3 = document.getElementById(\"itemName3\").value;\r\n");
      out.write("\t\t\tvar getUrl = \"?usage=name&name1=\"+name1+\"&name2=\"+name2+\"&name3=\"+name3;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari\r\n");
      out.write("\t\t\t\t\txhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t} else { // code for IE6, IE5\r\n");
      out.write("\t\t\t\t\txhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"GET\", url+getUrl, true);\r\n");
      out.write("\t\t\txhttp.onreadystatechange = OnData;\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction searchByType() {\r\n");
      out.write("\t\t\tvar url = \"getItems.jsp\";\r\n");
      out.write("\t\t\tvar type = document.getElementById(\"itemType\");\r\n");
      out.write("\t\t\ttype = type.options[type.selectedIndex].text;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (type == \"-- Show all --\") {\r\n");
      out.write("\t\t\t\ttype = \"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t//alert(type);\r\n");
      out.write("\t\t\tvar getUrl = \"?usage=type&type=\"+type;\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (window.XMLHttpRequest) { // code for IE7+, Firefox, Chrome, Opera, Safari\r\n");
      out.write("\t\t\t\t\txhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t\t} else { // code for IE6, IE5\r\n");
      out.write("\t\t\t\t\txhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\txhttp.open(\"GET\", url+getUrl, true);\r\n");
      out.write("\t\t\txhttp.onreadystatechange = OnData;\r\n");
      out.write("\t\t\txhttp.send();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$submitActors.click(\r\n");
      out.write("\t\t\tfunction(event) {\r\n");
      out.write("\t\t\t\tsubmitActor = this;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\r\n");
      out.write("\t\tfunction OnData() {\r\n");
      out.write("\t\t\t\tvar\tm =  document.getElementById(\"auctionData\");\r\n");
      out.write("\t\t\t\tif (xhttp.readyState != 4)\t{\r\n");
      out.write("\t\t\t\t\tm.innerHTML = 'Loading....';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (xhttp.readyState == 4) {\r\n");
      out.write("\t\t\t\t\tif (xhttp.status == 200)\t{\r\n");
      out.write("\t\t\t\t\t\t\tm.innerHTML = xhttp.responseText;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tm.innerHTML = \"Error loading data\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("  </head>\r\n");
      out.write("\t<nav class=\"navbar\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n");
      out.write("        <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("      </button>\r\n");
      out.write("  \t</div> <!-- navbar-header -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("\t\t<div class=\"myNavbar\" id=\"myNavbar\">\r\n");
      out.write("      <ul class=\"nav\">\r\n");
      out.write("        <li class=\"active floatLeft\">\r\n");
      out.write("\t\t\t\t\t<a class=\"open_nav\" href=\"#\">Search<span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("        <li class = \"floatLeft\"><a href=\"#\">Post</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"floatLeft\"><a href=\"Completed.jsp\">Completed</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"dropdown navbar-right\" style=\"padding-left:300px;\">\r\n");
      out.write("\t\t\t\t\t<a data-target=\"#collapseMenu\" data-toggle=\"collapse\" >Menu<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"collapseMenu\" class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\">Features</a></li><br>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"#\">Help</a></li>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("      </ul> <!-- .nav -->\r\n");
      out.write("    </div> <!-- .myNavbar -->\r\n");
      out.write("\t</div> <!-- .container-fluid -->\r\n");
      out.write("</nav>\r\n");
      out.write("<body class=\"auctionHouseBody\">\r\n");
      out.write("\t<div id =\"Search\">\r\n");
      out.write("\t<div class=\"borderSidebar\">\r\n");
      out.write("\t\t<form name=\"myForm\" id=\"customerSearchForm\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t\t<label class = \"control-label regLabel\" for=\"itemType1\">Search By Type:</label>\r\n");
      out.write("\t\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t\t<select id=\"itemType\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t<option>-- Show all --</option> <!-- TODO. Better empty option? -->\r\n");
      out.write("\t\t\t\t\t\t\t");

							stmt = conn.createStatement();
							sql = "select I.Type from Item I";
							itemTypeRes = stmt.executeQuery(sql);
							while(itemTypeRes.next()) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\r\n");
      out.write("\t\t\t\t\t\t\t\t\"");
 itemTypeRes.getString(1); 
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( itemTypeRes.getString(1));
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");
 }
							itemTypeRes.close();
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div> <!-- searchByType -->\r\n");
      out.write("\t\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t\t<input name=\"searchByTypeBtn\" class=\"btn btn-default\" type=\"button\" onclick=\"searchByType()\" value=\"Search\"/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t<label class = \"control-label regLabel\" for=\"itemName\">Search By Name:</label>\r\n");
      out.write("\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"itemName1\" placeholder=\"Item Name\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"itemName2\" placeholder=\"Item Name\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"itemName3\" placeholder=\"Item Name\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group greenShadowText\">\r\n");
      out.write("\t\t\t\t<div class = \"controls regControl\">\r\n");
      out.write("\t\t\t\t\t\t<input name=\"searchByNameBtn\" class=\"btn btn-default\" type=\"button\" onclick=\"searchByName()\" value=\"Search\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t</form> <!-- myForm -->\r\n");
      out.write("\t</div> <!-- borderSidebar -->\r\n");
      out.write("  <div class=\"container auctionTable\">\r\n");
      out.write("    <div id=\"auctionData\">\r\n");
      out.write("\t\t\t<h5 style=\"text-align:center; color:black\">SEARCH RESULTS</h5>\r\n");
      out.write("      <table id =\"auctionDataTable\" class=\"table table-striped table-bordered dt-responsive nowrap auctionHouseTable\"  >\r\n");
      out.write("        <thead>\r\n");
      out.write("          <tr>\r\n");
      out.write("            <th>Item</th>\r\n");
      out.write("            <th>Seller</th>\r\n");
      out.write("            <th>Current Bid</th>\r\n");
      out.write("            <th>Time Left</th>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("          ");

          while(allAuctionsRes.next()) {
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td>\r\n");
      out.write("                ");
      out.print(allAuctionsRes.getString(1));
      out.write("\r\n");
      out.write("              </td>\r\n");
      out.write("              <td>\r\n");
      out.write("                ");
      out.print(allAuctionsRes.getString(2));
      out.write("\r\n");
      out.write("              </td>\r\n");
      out.write("              <td>\r\n");
      out.write("                ");
      out.print(allAuctionsRes.getInt(3));
      out.write("\r\n");
      out.write("              </td>\r\n");
      out.write("              <td>\r\n");
      out.write("                ");
 int hours = Integer.parseInt(allAuctionsRes.getString(4).split(":")[0]);
                   int days = hours / 24;
                   int hoursLeft = hours % 24;
                
      out.write("\r\n");
      out.write("                ");
      out.print(days + "d" + hoursLeft + "h" );
      out.write("\r\n");
      out.write("              </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("          ");
 }
          allAuctionsRes.close();
          conn.close();
          
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("      </div>\r\n");
      out.write("\t\t</div> <!-- .container .auctionTable-->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("\t</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
